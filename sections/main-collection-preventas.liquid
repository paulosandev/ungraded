{% comment %}
  main-collection-preventas.liquid
  Plantilla específica para la colección de Preventas - Diseño Simple
{% endcomment %}

<div class="page-width">
  <div class="collection-container preventas-container">
    {% comment %} COLUMNA IZQUIERDA: FILTROS SIMPLES {% endcomment %}
    <div class="collection-sidebar" id="filterSidebar">
      <div class="sidebar-header">
        <h2 class="filter-title">Filtrar</h2>
        <button class="sidebar-close" id="closeSidebar" aria-label="Cerrar filtros">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>

      <form id="CollectionFiltersForm" class="collection-filters-form">
        {% comment %} DETECTAR FILTROS ACTIVOS PRIMERO {% endcomment %}
        {% assign has_tag_filter = false %}
        {% assign has_date_filter = false %}
        {% assign selected_tags = blank %}
        {% assign selected_dates = blank %}

        {% comment %} Detectar filtros usando múltiples métodos {% endcomment %}
        {% assign page_url = request.url | default: '' %}
        {% assign query_params = request.query_parameters %}

        {% comment %} Intentar diferentes formas de acceder a los parámetros {% endcomment %}
        {% assign filter_tag_param = request.query_parameters['filter.v.tag'] | default: blank %}
        {% assign filter_date_param = request.query_parameters.filter_date | default: blank %}

        {% comment %} También intentar con parsing manual de la URL {% endcomment %}
        {% unless filter_tag_param != blank %}
          {% if page_url contains 'filter.v.tag=' %}
            {% assign url_parts = page_url | split: 'filter.v.tag=' %}
            {% if url_parts.size > 1 %}
              {% assign tag_part = url_parts[1] | split: '&' | first %}
              {% assign filter_tag_param = tag_part %}
            {% endif %}
          {% endif %}
        {% endunless %}

        {% unless filter_date_param != blank %}
          {% if page_url contains 'filter_date=' %}
            {% assign url_parts = page_url | split: 'filter_date=' %}
            {% if url_parts.size > 1 %}
              {% assign date_part = url_parts[1] | split: '&' | first %}
              {% assign filter_date_param = date_part %}
            {% endif %}
          {% endif %}
        {% endunless %}

        {% comment %} DEBUG: Mostrar URLs y parámetros {% endcomment %}
        <!-- DEBUG: request.url: {{ request.url }} -->
        <!-- DEBUG: canonical_url: {{ canonical_url }} -->
        <!-- DEBUG: query_parameters: {{ query_params | json }} -->
        <!-- DEBUG: filter_tag_param: {{ filter_tag_param }} -->
        <!-- DEBUG: filter_date_param: {{ filter_date_param }} -->

        {% comment %} Detectar filtros de tags {% endcomment %}
        {% if filter_tag_param != blank %}
          {% assign has_tag_filter = true %}
          {% assign selected_tags = filter_tag_param | split: '+' %}
        {% endif %}

        {% comment %} Detectar filtros de fecha {% endcomment %}
        {% if filter_date_param != blank %}
          {% assign has_date_filter = true %}
          {% assign selected_dates = filter_date_param | split: '+' %}
        {% endif %}

        {% comment %} Obtener datos de productos para filtros dinámicos {% endcomment %}
        {% assign expansion_tags = blank %}
        {% assign tipo_producto_tags = blank %}
        {% assign fechas_lanzamiento = blank %}

        {% for product in collection.products %}
          {% comment %} Solo procesar productos que sean preventa {% endcomment %}
          {% if product.tags contains 'Preventa_Si' or product.metafields.custom.es_preventa == true %}
            {% comment %} Recopilar expansiones {% endcomment %}
            {% for tag in product.tags %}
              {% if tag contains 'Expansion_' %}
                {% unless expansion_tags contains tag %}
                  {% assign expansion_tags = expansion_tags | append: tag | append: ',' %}
                {% endunless %}
              {% endif %}

              {% if tag contains 'TipoProducto_' %}
                {% unless tipo_producto_tags contains tag %}
                  {% assign tipo_producto_tags = tipo_producto_tags | append: tag | append: ',' %}
                {% endunless %}
              {% endif %}
            {% endfor %}

            {% comment %} Recopilar fechas de lanzamiento {% endcomment %}
            {% if product.metafields.custom.fecha_lanzamiento != blank %}
              {% assign fecha_string = product.metafields.custom.fecha_lanzamiento | date: '%Y-%m' %}
              {% unless fechas_lanzamiento contains fecha_string %}
                {% assign fechas_lanzamiento = fechas_lanzamiento | append: fecha_string | append: ',' %}
              {% endunless %}
            {% endif %}
          {% endif %}
        {% endfor %}

        {% comment %} Filtro por Expansión {% endcomment %}
        {% assign expansion_array = expansion_tags | split: ',' %}
        {% if expansion_array.size > 0 %}
          <div class="filter-group">
            <h3 class="filter-group-title">Expansión</h3>
            {% for tag in expansion_array %}
              {% if tag != blank %}
                {% assign expansion_name = tag | remove: 'Expansion_' %}
                <label class="filter-checkbox">
                  <input
                    type="checkbox"
                    name="filter_tags"
                    value="{{ tag }}"
                    {% if has_tag_filter and selected_tags contains tag %}
                      checked
                    {% endif %}
                  >
                  <span class="checkmark"></span>
                  {{ expansion_name }}
                </label>
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}

        {% comment %} Filtro por Tipo de Producto {% endcomment %}
        {% assign tipo_array = tipo_producto_tags | split: ',' %}
        {% if tipo_array.size > 0 %}
          <div class="filter-group">
            <h3 class="filter-group-title">Tipo de Producto</h3>
            {% for tag in tipo_array %}
              {% if tag != blank %}
                {% assign tipo_name = tag | remove: 'TipoProducto_' %}
                {% comment %} Convertir nombres técnicos a nombres amigables {% endcomment %}
                {% case tipo_name %}
                  {% when 'ETB' %}
                    {% assign display_name = 'Elite Trainer Box' %}
                  {% when 'BoosterBox' %}
                    {% assign display_name = 'Booster Box' %}
                  {% when 'BoosterBundle' %}
                    {% assign display_name = 'Booster Bundle' %}
                  {% else %}
                    {% assign display_name = tipo_name %}
                {% endcase %}
                <label class="filter-checkbox">
                  <input
                    type="checkbox"
                    name="filter_tags"
                    value="{{ tag }}"
                    {% if has_tag_filter and selected_tags contains tag %}
                      checked
                    {% endif %}
                  >
                  <span class="checkmark"></span>
                  {{ display_name }}
                </label>
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}

        {% comment %} Filtro por Fecha de Lanzamiento (Mes/Año) {% endcomment %}
        {% assign fechas_array = fechas_lanzamiento | split: ',' %}
        <!-- DEBUG: Fechas encontradas: {{ fechas_lanzamiento }} -->
        <!-- DEBUG: request.url: {{ request.url }} -->
        <!-- DEBUG: query_parameters: {{ query_params | json }} -->
        <!-- DEBUG: filter_tag_param: {{ filter_tag_param }} -->
        <!-- DEBUG: filter_date_param: {{ filter_date_param }} -->
        <!-- DEBUG: has_date_filter: {{ has_date_filter }}, selected_dates: {{ selected_dates | join: ', ' }} -->
        {% if fechas_array.size > 0 %}
          <div class="filter-group">
            <h3 class="filter-group-title">Fecha de Lanzamiento</h3>
            {% assign fechas_sorted = fechas_array | sort %}
            {% for fecha in fechas_sorted %}
              {% if fecha != blank %}
                {% assign fecha_parts = fecha | split: '-' %}
                {% assign year = fecha_parts[0] %}
                {% assign month_num = fecha_parts[1] %}

                {% comment %} Convertir número de mes a nombre {% endcomment %}
                {% case month_num %}
                  {% when '01' -%}
                    {%- assign month_name = 'Enero' %}
                  {% when '02' -%}
                    {%- assign month_name = 'Febrero' %}
                  {% when '03' -%}
                    {%- assign month_name = 'Marzo' %}
                  {% when '04' -%}
                    {%- assign month_name = 'Abril' %}
                  {% when '05' -%}
                    {%- assign month_name = 'Mayo' %}
                  {% when '06' -%}
                    {%- assign month_name = 'Junio' %}
                  {% when '07' -%}
                    {%- assign month_name = 'Julio' %}
                  {% when '08' -%}
                    {%- assign month_name = 'Agosto' %}
                  {% when '09' -%}
                    {%- assign month_name = 'Septiembre' %}
                  {% when '10' -%}
                    {%- assign month_name = 'Octubre' %}
                  {% when '11' -%}
                    {%- assign month_name = 'Noviembre' %}
                  {% when '12' -%}
                    {%- assign month_name = 'Diciembre' %}
                {% endcase %}

                <label class="filter-checkbox">
                  <input
                    type="checkbox"
                    name="filter_date"
                    value="{{ fecha }}"
                    {% if has_date_filter and selected_dates contains fecha %}
                      checked
                    {% endif %}
                  >
                  <span class="checkmark"></span>
                  {{ month_name }}
                  {{ year }}
                </label>
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}

        {% comment %} Botones de acción {% endcomment %}
        <div class="filter-actions">
          <button type="button" class="filter-clear-btn" id="clearFilters">Limpiar filtros</button>
        </div>
      </form>
    </div>

    {% comment %} Overlay para móvil {% endcomment %}
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

    {% comment %} Botón para abrir filtros en móvil {% endcomment %}
    <button class="filter-toggle-btn" id="openFilters" aria-label="Abrir filtros">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M3 4H21V6H3V4ZM7 11H17V13H7V11ZM11 18H13V20H11V18Z" fill="currentColor"/>
      </svg>
      <span>Filtros</span>
      <span class="filter-count" id="filterCount">0</span>
    </button>

    {% comment %} COLUMNA DERECHA: CONTENIDO PRINCIPAL {% endcomment %}
    <div class="collection-main-content">
      {% comment %} Header Simple {% endcomment %}
      <div class="preventas-header">
        <div class="header-title">
          <div class="title-line-1">{{ section.settings.title_line_1 | default: '¿ESTAS AQUI POR LAS PREVENTAS' }}</div>
          <div class="title-line-2">{{ section.settings.title_line_2 | default: 'O POR PURA ANCIEDAD ?' }}</div>
        </div>
        <div class="mascot-container">
          {% if section.settings.mascot_image %}
            <img
              src="{{ section.settings.mascot_image | image_url: width: 200 }}"
              alt="{{ section.settings.mascot_image.alt | default: 'Mascota Preventas' }}"
              class="mascot-image"
              width="200"
              height="150"
            >
          {% else %}
            <div class="mascot-character">
              <div class="mascot-simple">
                <div class="mascot-icon">📦</div>
                <div class="mascot-text">PREVENTAS</div>
              </div>
            </div>
          {% endif %}
        </div>
      </div>

      {% comment %} Grid de productos simple {% endcomment %}
      <div class="product-grid preventas-grid">
        {% assign products_shown = 0 %}
        {% for product in collection.products %}
          {% comment %} Solo mostrar productos en preventa {% endcomment %}
          {% if product.tags contains 'Preventa_Si' or product.metafields.custom.es_preventa == true %}
            {% comment %} RENDERIZAR TODOS LOS PRODUCTOS SIN FILTROS DEL SERVIDOR {% endcomment %}
            {% comment %} El filtrado se hará completamente del lado del cliente {% endcomment %}

            {% comment %} Agregar atributo data-fecha para filtering del cliente {% endcomment %}
            {% assign product_date_for_debug = '' %}
            {% if product.metafields.custom.fecha_lanzamiento != blank %}
              {% assign product_date_for_debug = product.metafields.custom.fecha_lanzamiento | date: '%Y-%m' %}
            {% else %}
              {% assign product_date_for_debug = 'sin-fecha' %}
            {% endif %}

            {% comment %} Agregar tags como data attributes para filtrado del cliente {% endcomment %}
            {% assign product_tags_string = '' %}
            {% for tag in product.tags %}
              {% if tag contains 'Expansion_' or tag contains 'TipoProducto_' %}
                {% assign product_tags_string = product_tags_string | append: tag | append: ',' %}
              {% endif %}
            {% endfor %}

            <div
              class="product-wrapper"
              data-fecha="{{ product_date_for_debug }}"
              data-product-title="{{ product.title | escape }}"
              data-product-tags="{{ product_tags_string }}"
              data-product-id="{{ product.id }}"
            >
              {% render 'product-card-preventas', product_card_product: product %}
            </div>
            {% assign products_shown = products_shown | plus: 1 %}
          {% endif %}
        {% endfor %}

        {% comment %} Mensaje si no hay productos después de aplicar filtros {% endcomment %}
        {% if products_shown == 0 %}
          <div class="empty-collection">
            <h3>No se encontraron productos</h3>
            <p>Intenta ajustar los filtros o limpiarlos para ver más productos.</p>
            <button type="button" class="filter-clear-btn" onclick="window.location.href = window.location.pathname">
              Ver todos los productos
            </button>
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<style>
  .preventas-container {
    display: grid;
    grid-template-columns: 280px 1fr;
    gap: 40px;
    margin-top: 20px;
  }

  /* SIDEBAR FILTROS */
  .collection-sidebar {
    background: #2d1b69;
    padding: 20px;
    border-radius: 8px;
    height: fit-content;
    transition: transform 0.3s ease;
  }

  /* Asegurar que el formulario de filtros no tenga fondo en ninguna resolución */
  .collection-filters-form,
  #CollectionFiltersForm {
    background: transparent !important;
    background-color: transparent !important;
  }

  .sidebar-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding-bottom: 15px;
    /* border-bottom: 2px solid rgba(251, 191, 36, 0.3); */
  }

  .sidebar-close {
    background: none;
    border: none;
    color: #fbbf24;
    cursor: pointer;
    padding: 8px;
    border-radius: 50%;
    transition: all 0.3s ease;
    display: none;
    align-items: center;
    justify-content: center;
  }

  .sidebar-close:hover {
    background: rgba(251, 191, 36, 0.2);
    transform: rotate(90deg);
  }

  /* Botón toggle para móvil */
  .filter-toggle-btn {
    display: none;
    position: fixed;
    bottom: 20px;
    right: 20px;
    background: #2d1b69;
    color: #fbbf24;
    border: 2px solid #fbbf24;
    border-radius: 50px;
    padding: 12px 20px;
    font-size: 1.4rem;
    font-weight: 600;
    cursor: pointer;
    z-index: 10000;
    box-shadow: 0 4px 20px rgba(45, 27, 105, 0.4);
    transition: all 0.3s ease;
    align-items: center;
    gap: 8px;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }

  .filter-toggle-btn:hover {
    background: #fbbf24;
    color: #2d1b69;
    transform: translateY(-2px);
    box-shadow: 0 6px 25px rgba(45, 27, 105, 0.6);
  }

  .filter-toggle-btn svg {
    transition: transform 0.3s ease;
  }

  .filter-toggle-btn:hover svg {
    transform: rotate(180deg);
  }

  .filter-count {
    background: #dc2626;
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    font-weight: 700;
    min-width: 20px;
  }

  .filter-count:empty {
    display: none;
  }

  /* Overlay */
  .sidebar-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 9998;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .sidebar-overlay.active {
    opacity: 1;
  }

  /* Botones de acción del sidebar */
  .filter-actions {
    margin-top: 30px;
    padding-top: 20px;
    border-top: 2px solid rgba(251, 191, 36, 0.3);
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .filter-clear-btn,
  .filter-apply-btn {
    padding: 12px 20px;
    border: none;
    border-radius: 8px;
    font-size: 1.4rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }

  .filter-clear-btn {
    background: transparent;
    color: #fbbf24;
    border: 2px solid #fbbf24;
  }

  .filter-clear-btn:hover {
    background: rgba(251, 191, 36, 0.1);
    transform: translateY(-1px);
  }

  .filter-apply-btn {
    background: #fbbf24;
    color: #2d1b69;
  }

  .filter-apply-btn:hover {
    background: #f59e0b;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(251, 191, 36, 0.3);
  }

  .filter-title {
    color: #fbbf24;
    font-size: 3.2rem;
    margin-bottom: 20px;
    font-weight: 700;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }

  .filter-group {
    margin-bottom: 30px;
  }

  .filter-group-title {
    color: #fbbf24;
    font-size: 1.8rem;
    margin-bottom: 15px;
    font-weight: 400;
    border-bottom: 2px dotted #fbbf24;
    padding-bottom: 8px;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }

  .filter-checkbox {
    display: flex;
    align-items: center;
    margin-bottom: 12px;
    cursor: pointer;
    color: white;
    font-weight: 400;
    font-size: 1.6rem;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }

  .filter-checkbox input[type='checkbox'] {
    margin-right: 10px;
    width: 20px;
    height: 20px;
    background: transparent;
    border: 2px solid #fbbf24;
    border-radius: 6px;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    cursor: pointer;
    position: relative;
    transition: all 0.3s ease;
    outline: none !important;
    box-shadow: none !important;
  }

  .filter-checkbox input[type='checkbox']:focus {
    outline: none !important;
    box-shadow: 0 0 0 3px rgba(251, 191, 36, 0.2) !important;
  }

  .filter-checkbox input[type='checkbox']:hover {
    border-color: #f59e0b;
    box-shadow: 0 0 8px rgba(251, 191, 36, 0.3) !important;
  }

  .filter-checkbox input[type='checkbox']:checked {
    background: #fbbf24;
    border-color: #fbbf24;
  }

  .filter-checkbox input[type='checkbox']:checked::after {
    content: '✓';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #000;
    font-weight: bold;
    font-size: 14px;
  }

  /* Ocultar el checkmark span que está causando problemas */
  .filter-checkbox .checkmark {
    display: none !important;
  }

  .filter-checkbox:hover {
    color: #fbbf24;
  }

  /* HEADER PRINCIPAL */
  .preventas-header {
    background: transparent;
    border-radius: 0;
    text-align: center;
    margin-bottom: 0px;
    margin-top: -45px;
    color: white;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .header-title {
    flex: 1;
    text-align: left;
  }

  .title-line-1,
  .title-line-2 {
    font-family: 'Tanker', var(--font-family-titles), sans-serif;
    font-weight: 900;
    color: #fbbf24;
    margin: 0;
    line-height: 1.1;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    text-transform: uppercase;
    letter-spacing: 0.02em;
  }

  .title-line-1 {
    font-size: {{ section.settings.title_line_1_size | default: 3.5 }}rem;
  }

  .title-line-2 {
    font-size: {{ section.settings.title_line_2_size | default: 4 }}rem;
  }

  .mascot-container {
    flex-shrink: 0;
    margin-left: 40px;
  }

  .mascot-image {
    max-width: 200px;
    height: auto;
    object-fit: contain;
  }

  .mascot-character {
    position: relative;
    width: 120px;
    height: 120px;
  }

  .mascot-simple {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    background: rgba(251, 191, 36, 0.1);
    border: 2px dashed #fbbf24;
    border-radius: 12px;
    padding: 10px;
  }

  .mascot-icon {
    font-size: 3rem;
    margin-bottom: 8px;
  }

  .mascot-text {
    color: #fbbf24;
    font-size: 0.8rem;
    font-weight: 700;
    text-align: center;
    letter-spacing: 1px;
  }

  .coming-soon-badges {
    position: absolute;
    top: -10px;
    right: -20px;
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  .coming-soon-badges .badge {
    background: #fbbf24;
    color: #000;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.7rem;
    font-weight: 700;
    border: 2px solid #000;
  }

  /* GRID DE PRODUCTOS */
  .preventas-grid {
    display: grid;
    grid-template-columns: repeat(4, 152px);
    gap: 20px;
    justify-content: start;
    align-items: start;
  }

  .product-wrapper {
    display: contents; /* No afecta el layout del grid */
  }

  .empty-collection {
    grid-column: 1 / -1;
    text-align: center;
    padding: 40px 20px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 15px;
    backdrop-filter: blur(10px);
    border: 2px solid rgba(251, 191, 36, 0.3);
  }

  .empty-collection h3 {
    color: #fbbf24;
    font-size: 2.4rem;
    margin-bottom: 10px;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }

  .empty-collection p {
    color: white;
    font-size: 1.6rem;
    margin-bottom: 20px;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }

  .empty-collection .filter-clear-btn {
    background: #fbbf24;
    color: #2d1b69;
    border: none;
    padding: 12px 24px;
    border-radius: 8px;
    font-size: 1.4rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
    width: auto;
  }

  .empty-collection .filter-clear-btn:hover {
    background: #f59e0b;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(251, 191, 36, 0.3);
  }

  /* RESPONSIVE */
  @media (max-width: 1200px) {
    .preventas-grid {
      grid-template-columns: repeat(4, 152px);
    }
  }

  /* RESPONSIVE MEJORADO - Títulos siempre en 2 líneas */

  /* Rango problemático: 1193px hacia abajo - Ajuste progresivo */
  @media (max-width: 1193px) {
    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.85);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.85);
    }
  }

  /* Rango crítico: 1150px hacia abajo */
  @media (max-width: 1150px) {
    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.8);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.8);
    }

    .mascot-image {
      max-width: 180px;
    }
  }

  /* Rango 1100px hacia abajo */
  @media (max-width: 1100px) {
    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.75);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.75);
    }

    .mascot-image {
      max-width: 170px;
    }
  }

  /* Rango crítico específico: 1073px hacia abajo - Prevenir 3 líneas */
  @media (max-width: 1073px) {
    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.7);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.7);
    }

    .mascot-image {
      max-width: 160px;
    }
  }

  /* Rango 1050px hacia abajo */
  @media (max-width: 1050px) {
    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.68);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.68);
    }

    .mascot-image {
      max-width: 150px;
    }
  }

  /* Rango 1020px hacia abajo */
  @media (max-width: 1020px) {
    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.65);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.65);
    }

    .mascot-image {
      max-width: 140px;
    }
  }

  /* Rango 1000px hacia abajo - Cambio a 3 columnas */
  @media (max-width: 1000px) {
    .preventas-container {
      grid-template-columns: 1fr;
      gap: 20px;
    }

    /* Ocultar sidebar en móvil */
    .collection-sidebar {
      position: fixed;
      top: 0;
      left: -100%;
      width: 320px;
      height: 100vh;
      z-index: 9999;
      overflow-y: auto;
      transform: translateX(-100%);
      border-radius: 0;
      border-top-right-radius: 15px;
      border-bottom-right-radius: 15px;
    }

    .collection-sidebar.active {
      left: 0;
      transform: translateX(0);
    }

    .sidebar-close {
      display: flex;
    }

    /* Mostrar botón toggle */
    .filter-toggle-btn {
      display: flex;
    }

    /* Mostrar overlay cuando sidebar está activo */
    .sidebar-overlay.active {
      display: block;
    }

    /* Cambiar layout del header a vertical desde 1000px */
    .preventas-header {
      flex-direction: column;
      text-align: center;
      gap: 20px;
    }

    .header-title {
      text-align: center;
    }

    .mascot-container {
      margin-left: 0;
    }

    .preventas-grid {
      grid-template-columns: repeat(3, 152px);
      gap: 18px;
    }

    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.75);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.75);
    }
  }

  @media (max-width: 968px) {
    .preventas-container {
      grid-template-columns: 1fr;
      gap: 20px;
    }

    .collection-sidebar {
      order: 2;
    }

    .collection-main-content {
      order: 1;
    }

    .preventas-grid {
      grid-template-columns: repeat(3, 152px);
    }

    .preventas-header {
      flex-direction: column;
      text-align: center;
      gap: 20px;
    }

    .header-title {
      text-align: center;
    }

    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.65);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.65);
    }

    .mascot-container {
      margin-left: 0;
    }

    .mascot-image {
      max-width: 150px;
    }
  }

  /* Rango 850px hacia abajo */
  @media (max-width: 850px) {
    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.6);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.6);
    }
  }

  /* Cambio a 2 columnas en tablet */
  @media (max-width: 768px) {
    .preventas-grid {
      grid-template-columns: repeat(2, 152px);
      gap: 15px;
    }

    /* Asegurar que el formulario de filtros no tenga fondo blanco en móvil */
    .collection-filters-form,
    #CollectionFiltersForm {
      background: transparent !important;
      background-color: transparent !important;
    }

    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.55);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.55);
    }

    .mascot-image {
      max-width: 120px;
    }
  }

  /* Rango 650px hacia abajo */
  @media (max-width: 650px) {
    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.5);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.5);
    }
  }

  /* Mantener 2 columnas en móvil - nunca menos */
  @media (max-width: 480px) {
    .preventas-grid {
      grid-template-columns: repeat(2, 152px);
      gap: 12px;
    }

    .title-line-1 {
      font-size: calc({{ section.settings.title_line_1_size | default: 3.5 }}rem * 0.45);
    }

    .title-line-2 {
      font-size: calc({{ section.settings.title_line_2_size | default: 4 }}rem * 0.45);
    }

    .mascot-image {
      max-width: 100px;
    }
  }

  /* Para pantallas muy pequeñas - mantener 2 columnas */
  @media (max-width: 360px) {
    .preventas-grid {
      grid-template-columns: repeat(2, 152px);
      gap: 10px;
    }
  }

  /* Filtros */
  .facets {
    margin-bottom: 2rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    backdrop-filter: blur(10px);
  }

  .facets__form {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: center;
  }

  .facet-filters {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .facet-filters__field {
    position: relative;
  }

  .facet-filters__label {
    display: block;
    padding: 0.5rem 1rem;
    background: rgba(255, 255, 255, 0.2);
    border: 2px solid transparent;
    border-radius: 25px;
    color: white;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 600;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }

  .facet-filters__label:hover {
    background: rgba(255, 255, 255, 0.3);
    border-color: #fbbf24;
  }

  .facet-filters__field input[type="checkbox"]:checked + .facet-filters__label {
    background: #fbbf24;
    color: #000;
    border-color: #fbbf24;
  }

  .facet-filters__field input[type="checkbox"] {
    display: none;
  }

  .facet-filters__summary {
    padding: 0.5rem 1rem;
    background: rgba(255, 255, 255, 0.2);
    border: 2px solid transparent;
    border-radius: 25px;
    color: white;
    cursor: pointer;
    font-weight: 600;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }

  .facet-filters__summary:hover {
    background: rgba(255, 255, 255, 0.3);
    border-color: #fbbf24;
  }

  .facets__reset {
    background: #dc2626;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 25px;
    cursor: pointer;
    font-weight: 600;
    transition: background-color 0.3s ease;
    font-family: 'Acumin Variable Concept', var(--font-family-web), -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }

  .facets__reset:hover {
    background: #b91c1c;
  }
</style>

{% schema %}
{
  "name": "Preventas",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Configuración Preventas"
    },
    {
      "type": "range",
      "id": "products_per_page",
      "min": 12,
      "max": 60,
      "step": 4,
      "default": 24,
      "label": "Productos por página"
    },
    {
      "type": "text",
      "id": "title_line_1",
      "label": "Primera línea del título",
      "default": "¿ESTAS AQUI POR LAS PREVENTAS"
    },
    {
      "type": "text",
      "id": "title_line_2",
      "label": "Segunda línea del título",
      "default": "O POR PURA ANCIEDAD ?"
    },
    {
      "type": "range",
      "id": "title_line_1_size",
      "min": 2,
      "max": 8,
      "step": 0.5,
      "default": 3.5,
      "label": "Tamaño primera línea (rem)",
      "info": "Tamaño de la primera línea del título"
    },
    {
      "type": "range",
      "id": "title_line_2_size",
      "min": 2,
      "max": 8,
      "step": 0.5,
      "default": 4,
      "label": "Tamaño segunda línea (rem)",
      "info": "Tamaño de la segunda línea del título"
    },
    {
      "type": "image_picker",
      "id": "mascot_image",
      "label": "Imagen de la mascota"
    }
  ],
  "presets": [
    {
      "name": "Preventas"
    }
  ]
}
{% endschema %}
